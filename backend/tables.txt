drop table if exists pregnant;
drop table if exists members;
drop table if exists has_group;
drop table if exists storage;
drop table if exists access;
drop table if exists link_file;

drop table if exists posts;

/* -- Entity tables: */

drop table if exists users;
drop table if exists pregnancy;
drop table if exists groups;
drop table if exists files;
drop table if exists messages;

create table users (
	user_id serial primary key,
	token text,
	email text unique not null,
	first_name text not null,
	last_name text not null,
	password text not null,
	due_date text,
	avatar bytea
);

create table posts (
	post_id serial primary key,
	owner_id integer,
	title text,
	caption text,
	media bytea,
	post_type text,
	tags text[],
	created_date timestamp default now(),
	constraint fk_post_user foreign key (owner_id)
		references users (user_id) on delete cascade
);


/* -- Relationship tables: */


create table access (
	user_id integer,
	post_id integer,
	constraint fk_access_user foreign key (user_id)
		references users (user_id) on delete cascade,
	constraint fk_access_post foreign key (post_id)
		references posts (post_id) on delete cascade
);

create table contacts (
	user_id integer,
	contact_id integer,
	constraint fk_contacts_from_user foreign key (user_id)
		references users (user_id) on delete cascade,
	constraint fk_contacts_user foreign key (contact_id)
		references users (user_id) on delete cascade
);